version: "3.7"
networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.34.0.0/16
services:
  proxysql:
    image: proxysql
    build:
      context: .
      dockerfile: proxysql/Dockerfile
      args:
        - PROXYSQL_CONF_FILE=${PROXYSQL_CONF_FILE}
    container_name: proxysql
    links:
      - mysql_0
      - mysql_1
      - mysql_2
    ports:
      - "6033:6033" # main port
      - "6032:6032" # admin port
    volumes:
      - ../../proxysql:/opt/proxysql
    privileged: true
    networks:
      testing_net:
        ipv4_address: 172.34.1.1

  mysql_0:
    image: mysql_0
    build: 
      context: .
      dockerfile: mysql/Dockerfile
    container_name: mysql_0
    command: [ "mysqld",
                    "--character-set-server=utf8mb4",
                    "--collation-server=utf8mb4_unicode_ci",
                    "--bind_address=0.0.0.0",
                    "--require_secure_transport=ON",
                    "--ssl-ca=/etc/certs/ca.pem",
                    "--ssl-cert=/etc/certs/server-cert.pem",
                    "--ssl-key=/etc/certs/server-key.pem",
                    "--tls_version=TLSv1.3",
                    "--default_authentication_plugin=mysql_native_password",
                    "--general_log=ON",
                    "--general_log_file=/tmp/logs/mysqld0.log"]
    volumes:
      - ./tests/mysql/init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./tests/certs:/etc/certs/
      - ./tests/logs:/tmp/logs/
    environment:
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_TCP_PORT: 3306
      MYSQL_DATABASE: "test_database"
      MYSQL_INITDB_SKIP_TZINFO: 'yes'
    # expose:
    #   - "3306"
    ports:
      - "3306:3306"
    networks:
      testing_net:
        ipv4_address: 172.34.1.2

  mysql_1:
    image: mysql_1
    build: 
      context: .
      dockerfile: mysql/Dockerfile
    container_name: mysql_1
    command: [ "mysqld",
                    "--character-set-server=utf8mb4",
                    "--collation-server=utf8mb4_unicode_ci",
                    "--bind_address=0.0.0.0",
                    "--require_secure_transport=ON",
                    "--ssl-ca=/etc/certs/ca.pem",
                    "--ssl-cert=/etc/certs/server-cert.pem",
                    "--ssl-key=/etc/certs/server-key.pem",
                    "--tls_version=TLSv1.3",
                    "--default_authentication_plugin=mysql_native_password",
                    "--general_log=ON",
                    "--general_log_file=/tmp/logs/mysqld1.log"]
    volumes:
      - ./tests/mysql/init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./tests/certs:/etc/certs/
      - ./tests/logs:/tmp/logs/
    environment:
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_TCP_PORT: 3307
    # expose:
    #   - "3307"
    ports:
      - "3307:3307"
    networks:
      testing_net:
        ipv4_address: 172.34.1.3

  mysql_2:
    image: mysql_2
    build: 
      context: .
      dockerfile: mysql/Dockerfile
    container_name: mysql_2
    command: [ "mysqld",
                    "--character-set-server=utf8mb4",
                    "--collation-server=utf8mb4_unicode_ci",
                    "--bind_address=0.0.0.0",
                    "--require_secure_transport=ON",
                    "--ssl-ca=/etc/certs/ca.pem",
                    "--ssl-cert=/etc/certs/server-cert.pem",
                    "--ssl-key=/etc/certs/server-key.pem",
                    "--tls_version=TLSv1.3",
                    "--default_authentication_plugin=mysql_native_password", 
                    "--general_log=ON",
                    "--general_log_file=/tmp/logs/mysqld2.log"]
    volumes:
      - ./tests/mysql/init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./tests/certs:/etc/certs/
      - ./proxysql/tests/logs:/tmp/logs/
    environment:
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_TCP_PORT: 3308
    # expose:
    #   - "3308"
    ports:
      - "3308:3308"
    networks:
      testing_net:
        ipv4_address: 172.34.1.4

